name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: bitnami/postgresql:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: organize
        ports:
          - 5432:5432

    steps:
      # Passo 1: Checkout do Código
      - name: Checkout do Código
        uses: actions/checkout@v3

      # Passo 2: Configurar Pnpm
      - name: Configurar Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.3

      # Passo 3: Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.16.0
          cache: 'pnpm'

      # Passo 4: Instalar Dependências
      - name: Instalar Dependências
        run: pnpm install

      # Passo 6: Aplicar Migrações Prisma
      - name: Aplicar Migrações Prisma
        run: pnpm prisma migrate dev
        env:
          DATABASE_URL: "postgresql://postgres:docker@localhost:5432/organize?schema=public"

      # Passo 5: Gerar Cliente Prisma
      - name: Gerar Cliente Prisma
        run: pnpm prisma generate

      # Passo 7: Linter (ESLint)
      - name: Linter (ESLint)
        run: pnpm lint

      # Passo 8: Testes de Unidade
      - name: Testes de Unidade
        run: pnpm test

      # Passo 9: Testes E2E
      - name: Testes E2E
        run: pnpm test:e2e
        env:
          DATABASE_URL: "postgresql://postgres:docker@localhost:5432/organize?schema=public"
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY:  ${{ secrets.JWT_PUBLIC_KEY }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      # Passo 10: Build da Aplicação
      - name: Build da Aplicação
        run: pnpm build